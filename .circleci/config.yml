# .circleci/config.yml

version: 2.1

workflows:
  version: 2
  build_and_test:
    jobs:
      - test_node_12
      - docker_push:
          requires:
            - test_node_12
      - kubernetes_deploy:
          requires:
            - docker_push

aliases:
  - &save_cache
    save_cache:
      key: v1-{{ checksum "yarn.lock" }}
      paths:
        - ./node_modules
  - &restore_cache
    restore_cache:
      key: v1-{{ checksum "yarn.lock" }}

# define a template for running tests on a specific Node.js version
tests_template: &tests_template
  steps:
    - checkout
    - *restore_cache
    - run: yarn install
    - run: yarn lint
    - run: yarn format:check
    - run: yarn test
    - run: yarn test:cov
    - run: yarn test:e2e
    - *save_cache

jobs:
  install_dependencies:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - *restore_cache
      - run: yarn install
      - *save_cache

  test_node_12:
    <<: *tests_template
    docker:
      - image: circleci/node:12

  test_node_14:
    <<: *tests_template
    docker:
      - image: circleci/node:14

  test_node_16:
    <<: *tests_template
    docker:
      - image: circleci/node:16

  # build and push Docker image to GCR
  docker_push:
    docker:
      - image: cimg/base:2023.05 # Circle CI Base Docker image
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Authenticate with GCR
          command: |
            echo ${GCR_SERVICE_ACCOUNT_KEY} | docker login -u _json_key \
            --password-stdin https://gcr.io
      - run:
          name: Build Docker image
          command: |
            docker build --rm=false \
            -t gcr.io/${GCR_PROJECT}/atolye15:latest \
            -f ./Dockerfile .
      - run:
          name: Push image to GCR
          command: |
            docker push gcr.io/${GCR_PROJECT}/atolye15:latest

  # deploy the Docker image to GKE
  kubernetes_deploy:
    docker:
      - image: google/cloud-sdk:alpine
    steps:
      - run:
          name: Install kubectl
          command: gcloud components install kubectl

      - run:
          name: Authenticate to GCP
          command: |
            echo "${GKE_SERVICE_ACCOUNT_KEY}" > .key.json
            gcloud auth activate-service-account --key-file .key.json
      - run:
          name: Configure project and cluster
          command: |
            gcloud config set project ${GKE_PROJECT}
            gcloud config set compute/zone ${GKE_ZONE}
            gcloud container clusters get-credentials ${GKE_CLUSTER} --zone ${GKE_ZONE}
      - run:
          name: Set namespace
          command: |
            if [ ${CIRCLE_BRANCH} == "develop" ]; then
                NAMESPACE="stage"
            elif [ ${CIRCLE_BRANCH} == "master" ]; then
                NAMESPACE="production"
            else
                echo "Unknown branch: ${CIRCLE_BRANCH}"
                exit 1
            fi
      - run:
          name: Update deployment image
          command: |
            kubectl set image deployment/atolye15 \
            atolye15=gcr.io/${GCR_PROJECT}/atolye15:latest --namespace=$NAMESPACE
